# Generated by Django 5.2.4 on 2025-08-22 09:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Kode Capaian Kompetensi')),
                ('description', models.TextField(verbose_name='Deskripsi Capaian Kompetensi')),
                ('calculation_method', models.CharField(choices=[('BOBOT', 'Bobot'), ('RATA_RATA', 'Rata-Rata'), ('MODUS', 'Modus'), ('NILAI_TERTINGGI', 'Nilai Tertinggi')], default='BOBOT', max_length=20, verbose_name='Tipe Penilaian')),
            ],
            options={
                'verbose_name_plural': 'Daftar Capaian Kompetensi',
            },
        ),
        migrations.CreateModel(
            name='GradingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summative_weight', models.PositiveIntegerField(default=60, verbose_name='Bobot Nilai Sumatif (%)')),
                ('formative_weight', models.PositiveIntegerField(default=40, verbose_name='Bobot Nilai Formatif (%)')),
            ],
        ),
        migrations.CreateModel(
            name='InfoSekolah',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama', models.CharField(max_length=255)),
                ('alamat', models.TextField()),
                ('kepala_sekolah', models.CharField(max_length=255)),
                ('nip_kepsek', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MataPelajaran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama', models.CharField(max_length=100, unique=True)),
                ('level', models.CharField(blank=True, max_length=50, null=True, verbose_name='Jenjang/Tingkat')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Deskripsi')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('MANAGER', 'Manager'), ('GURU', 'Guru'), ('WALIKELAS', 'Wali Kelas'), ('SISWA', 'Siswa')], default='SISWA', max_length=50)),
                ('join_date', models.DateField(blank=True, null=True, verbose_name='Tanggal Bergabung')),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Nomor Induk Pegawai')),
                ('nis', models.CharField(blank=True, max_length=20, null=True, verbose_name='NIS')),
                ('nisn', models.CharField(blank=True, max_length=20, null=True, verbose_name='NISN')),
                ('profile_picture', models.ImageField(blank=True, default='profile_pictures/default.png', null=True, upload_to='profile_pictures/', verbose_name='Foto Profil')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Alamat')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Nomor Telepon')),
                ('theme', models.CharField(choices=[('LIGHT', 'Light'), ('DARK', 'Dark'), ('BLUE', 'Blue Ocean'), ('GREEN', 'Green Forest'), ('PURPLE', 'Purple Night'), ('NEON', 'Neon Cyber'), ('RETRO', 'Retro Terminal'), ('FUTURISTIC', 'Futuristic Glass'), ('HIGH_CONTRAST', 'High Contrast')], default='LIGHT', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CatatanWaliKelas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catatan', models.TextField()),
                ('siswa', models.ForeignKey(limit_choices_to={'role': 'SISWA'}, on_delete=django.db.models.deletion.CASCADE, related_name='catatan_wali_kelas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Contoh: 10-A, 12-C', max_length=100)),
                ('level', models.CharField(choices=[('SD', 'Sekolah Dasar'), ('SMP', 'Sekolah Menengah Pertama'), ('SMA', 'Sekolah Menengah Atas'), ('SMK', 'Sekolah Menengah Kejuruan')], max_length=50, verbose_name='Jenjang/Tingkat')),
                ('homeroom_teacher', models.OneToOneField(blank=True, limit_choices_to={'role': 'WALIKELAS'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='homeroom_class_dari', to=settings.AUTH_USER_MODEL, verbose_name='Wali Kelas')),
                ('mata_pelajaran', models.ManyToManyField(blank=True, to='dashboard.matapelajaran')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='class_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='dashboard.classgroup', verbose_name='Kelas'),
        ),
        migrations.CreateModel(
            name='AssessmentComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nama Komponen (cth: Formatif, Sumatif)')),
                ('description', models.TextField(blank=True, verbose_name='Deskripsi Komponen')),
                ('weight', models.PositiveIntegerField(default=100, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Bobot (%)')),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='dashboard.competency')),
            ],
        ),
        migrations.CreateModel(
            name='Ekstrakurikuler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nama_kegiatan', models.CharField(max_length=255)),
                ('predikat', models.CharField(blank=True, max_length=50, null=True)),
                ('keterangan', models.TextField(blank=True, null=True)),
                ('siswa', models.ForeignKey(limit_choices_to={'role': 'SISWA'}, on_delete=django.db.models.deletion.CASCADE, related_name='ekskul_siswa', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nama Ujian')),
                ('start_time', models.DateTimeField(verbose_name='Waktu Mulai')),
                ('end_time', models.DateTimeField(verbose_name='Waktu Selesai')),
                ('duration_minutes', models.PositiveIntegerField(help_text='Durasi ujian dalam menit')),
                ('tokens', models.JSONField(default=list)),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.classgroup', verbose_name='Kelas')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_exams', to=settings.AUTH_USER_MODEL)),
                ('MataPelajaran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.matapelajaran', verbose_name='Mata Pelajaran')),
            ],
        ),
        migrations.CreateModel(
            name='ExamAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('entered_token', models.CharField(blank=True, max_length=20, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.exam')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'SISWA'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Kehadiran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sakit', models.PositiveIntegerField(default=0)),
                ('izin', models.PositiveIntegerField(default=0)),
                ('alpha', models.PositiveIntegerField(default=0, verbose_name='Tanpa Keterangan')),
                ('siswa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='kehadiran_siswa', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KenaikanKelas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NAIK', 'Naik Kelas'), ('TINGGAL', 'Tinggal di Kelas'), ('LULUS', 'Lulus')], max_length=10)),
                ('keterangan', models.CharField(max_length=255, verbose_name='Naik ke/Tinggal di Kelas')),
                ('siswa', models.ForeignKey(limit_choices_to={'role': 'SISWA'}, on_delete=django.db.models.deletion.CASCADE, related_name='kenaikan_kelas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='competency',
            name='mataPelajaran',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competencies', to='dashboard.matapelajaran'),
        ),
        migrations.CreateModel(
            name='Prestasi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jenis_kegiatan', models.CharField(max_length=255, verbose_name='Jenis Prestasi/Kegiatan')),
                ('keterangan', models.TextField(verbose_name='Keterangan (Contoh: Juara 1 Tingkat Nasional)')),
                ('siswa', models.ForeignKey(limit_choices_to={'role': 'SISWA'}, on_delete=django.db.models.deletion.CASCADE, related_name='prestasi', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='Teks Soal')),
                ('question_image', models.ImageField(blank=True, null=True, upload_to='question_images/', verbose_name='Gambar Soal')),
                ('question_type', models.CharField(choices=[('PILIHAN_GANDA', 'Pilihan Ganda'), ('ISIAN_SINGKAT', 'Isian Singkat'), ('MENJODOHKAN', 'Menjodohkan'), ('BENAR_SALAH', 'Benar/Salah'), ('ESAI', 'Esai')], max_length=50, verbose_name='Tipe Soal')),
                ('difficulty', models.CharField(choices=[('PRA-STRUKTURAL', 'PRA-STRUKTURAL'), ('UNISTRUKTURAL', 'UNISTRUKTURAL'), ('MULTISTRUKTURAL', 'MULTISTRUKTURAL'), ('RELASI', 'RELASI'), ('ABSTRAK', 'ABSTRAK')], default='ABSTRAK', max_length=20, verbose_name='Tingkat Kesulitan')),
                ('weight', models.PositiveIntegerField(default=10, verbose_name='Bobot Soal')),
                ('options', models.JSONField(blank=True, default=dict, help_text='Hanya untuk soal pilihan ganda atau menjodohkan', null=True)),
                ('correct_answer', models.TextField(help_text='Kunci jawaban untuk PG atau jawaban referensi untuk esai')),
                ('exam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='dashboard.exam')),
                ('matapelajaran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='dashboard.matapelajaran')),
            ],
        ),
        migrations.CreateModel(
            name='TanggapanOrangTua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tanggapan', models.TextField()),
                ('tanggal', models.DateField(auto_now_add=True)),
                ('siswa', models.ForeignKey(limit_choices_to={'role': 'SISWA'}, on_delete=django.db.models.deletion.CASCADE, related_name='tanggapan_orang_tua', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeacherEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Isi Evaluasi')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('evaluator', models.ForeignKey(limit_choices_to={'role': 'MANAGER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='given_evaluations', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(limit_choices_to=models.Q(('role', 'GURU'), ('role', 'WALIKELAS'), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, related_name='received_evaluations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TujuanPembelajaran',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('SD', 'Sekolah Dasar'), ('SMP', 'Sekolah Menengah Pertama'), ('SMA', 'Sekolah Menengah Atas'), ('SMK', 'Sekolah Menengah Kejuruan')], default='SMA', max_length=50, verbose_name='Jenjang/Tingkat')),
                ('kelas', models.CharField(help_text='Contoh: 10 A, 11 IPA, 12 IPS', max_length=20, verbose_name='Tingkat Kelas')),
                ('deskripsi', models.TextField(verbose_name='Deskripsi Tujuan Pembelajaran')),
                ('semester', models.IntegerField()),
                ('mata_pelajaran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tujuan_pembelajaran', to='dashboard.matapelajaran')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.classgroup')),
                ('student', models.ForeignKey(limit_choices_to={'role': 'SISWA'}, on_delete=django.db.models.deletion.CASCADE, related_name='enrollment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('student', 'class_group')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='competency',
            unique_together={('matapelajaran', 'code')},
        ),
        migrations.CreateModel(
            name='Nilai',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nilai_akhir', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('deskripsi', models.TextField(blank=True, null=True)),
                ('mata_pelajaran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.matapelajaran')),
                ('siswa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nilai_siswa', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('siswa', 'mata_pelajaran')},
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_option', models.CharField(blank=True, max_length=10, null=True, verbose_name='Opsi Dipilih')),
                ('answer_text', models.TextField(blank=True, null=True, verbose_name='Jawaban Teks')),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='dashboard.examattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.question')),
            ],
            options={
                'unique_together': {('attempt', 'question')},
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField(default=0, verbose_name='Nilai')),
                ('assessment_component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='dashboard.assessmentcomponent')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Daftar Nilai Siswa',
                'unique_together': {('student', 'assessment_component')},
            },
        ),
        migrations.CreateModel(
            name='TeacherAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MataPelajaran', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.matapelajaran')),
                ('class_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.classgroup')),
                ('teacher', models.ForeignKey(limit_choices_to=models.Q(('role', 'GURU'), ('role', 'WALIKELAS'), _connector='OR'), on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('teacher', 'MataPelajaran', 'class_group')},
            },
        ),
        migrations.CreateModel(
            name='PenilaianTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nilai', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('siswa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='penilaian_tp', to=settings.AUTH_USER_MODEL)),
                ('tp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='penilaian', to='dashboard.tujuanpembelajaran')),
            ],
            options={
                'unique_together': {('siswa', 'tp')},
            },
        ),
    ]
